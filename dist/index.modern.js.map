{"version":3,"file":"index.modern.js","sources":["../src/constants/index.ts","../src/utils/worker.ts","../src/utils/index.ts","../src/weim.ts","../src/emitter.ts"],"sourcesContent":["enum IMCommand {\n    LOGIN=\"Login\",\n    LOGOUT=\"Logout\",\n    GETLOGINSTATUS=\"GetLoginStatus\"\n}\n\nenum IMEvents{\n\n}\nexport {\n    IMCommand,\n    IMEvents\n}","function create(fun: any) {\n    const blob = new Blob([\"(\" + fun + \")()\"]);\n    const url = window.URL.createObjectURL(blob);\n    const worker = new Worker(url);\n    return worker;\n  }\n  \n  export const createWorker = (callback: () => void, time: number) => {\n    const pollingWorker = create(`function (e) {\n        setInterval(function () {\n          this.postMessage(null)\n        }, ${time})\n      }`);\n    pollingWorker.onmessage = callback;\n    return pollingWorker;\n  };\n  \n  export const stopWorker = (instance: Worker) => {\n    try {\n      instance && instance.terminate();\n    } catch (err) {\n      console.log(err);\n    }\n  };","const uuid = ():string => {\n    return (Math.random()*36).toString(36).slice(2)+new Date().getTime().toString();\n}\nexport * from './worker'\nexport {\n    uuid\n}","import {  Emitter } from \"./emitter\";\nimport { WebsocketResponse, Msg, userInfo, InitConfig } from \"./types\";\nimport {IMCommand, IMEvents} from \"./constants\"\nimport { createWorker, stopWorker, uuid } from \"./utils\";\n\nexport default class WEIMSDK extends Emitter{\n\n    private ws:WebSocket | undefined;\n    private wsUrl: string = \"\";\n    private lastTime: number = 0;\n    private heartbeatCount: number = 0;\n    private heartbeatStartTime: number = 0;\n    private logoutFlag: boolean = false;\n    private lock: boolean = false;\n    private domain:string= \"\";\n    private mid:Number= 0;\n    private platform:string= \"wx\";\n    private onceFlag:boolean = true;\n    private timer:NodeJS.Timer | undefined = undefined;\n    private worker:Worker | null = null;\n    private userInfo:userInfo;\n    constructor(cfg:InitConfig){\n        super();\n        this.wsUrl = cfg.wsUrl;\n        this.domain = cfg.domain;\n        this.mid = cfg.mid;\n        this.platform = cfg.platform;\n        this.userInfo = cfg.userInfo;\n    }\n    connect(){\n        return new Promise<WebsocketResponse>((resolve,reject) =>{\n            const onOpen = () =>{\n                this.iLogin(this.userInfo).then((res)=>{\n                    this.logoutFlag = false;\n                    this.heartbeat();\n                    resolve(res);\n                })\n                .catch((err) =>{\n                    reject(err)\n                })\n            }\n            const onClose = () => {\n                if(!this.logoutFlag){\n                    // Object.values()\n                }\n                reject({errCode:111,errMsg:'ws connect close ...'})\n            }\n            \n            const onError = (err:Error | Event) => {\n                reject({errCode:112,errMsg:'ws connect error...'})\n            }\n            if(this.platform === 'web'){\n                this.ws = new WebSocket(this.wsUrl);\n                this.ws.onclose = onClose;\n                this.ws.onopen = onOpen;\n                this.ws.onerror = onError;\n                return;\n            }\n            //@ts-ignore\n            const platformNamespace = this.platform === \"uni\" ? uni : wx;\n            this.ws = platformNamespace.connectSocket({\n                url: this.wsUrl,\n                complete: () => {},\n              });\n              //@ts-ignore\n              this.ws.onClose(onClose);\n              //@ts-ignore\n              this.ws.onOpen(onOpen);\n              //@ts-ignore\n              this.ws.onError(onError);\n        \n            if(!this.ws){\n                reject({errCode:112,errMsg:'The current platform is not supported'})\n            }\n        });\n    }\n    private heartbeat(){\n        console.log('start heartbeat ...')\n        this.clearTimer();\n        const callback = () =>{\n            if(this.logoutFlag){\n                if(this.worker){\n                    stopWorker(this.worker);\n                }\n            }\n        }\n        if(this.ws?.readyState !== this.ws?.CONNECTING && this.ws?.readyState!==this.ws?.OPEN){\n            this.reconnect();\n            return;\n        }\n        const now = new Date().getTime();\n        if(now - this.lastTime < 9000){\n            return;\n        }\n        this.getLoginStatus().catch((err)=>this.reconnect());\n        if(this.worker){\n            stopWorker(this.worker);\n        }\n        try{\n            this.worker = createWorker(callback,10000);\n        }catch(error){\n\n        }\n    }\n    private clearTimer(){\n        if(this.timer){\n            clearTimeout(this.timer);\n        }\n    }\n    private createMsg(cmd:IMCommand,data:any,fromId:Number,toId:Number){\n        return {\n            cmd:cmd,\n            domain:this.domain,\n            mid:this.mid,\n            fromId:fromId,\n            toId:toId,\n            data:data\n        }\n    }\n\n    logout(uid:Number){\n        return new Promise<WebsocketResponse>((resolve,reject) => {\n            const _uuid = uuid()\n            const msg = this.createMsg(IMCommand.LOGOUT,\"\",uid,0);\n            this.wsSend(msg,resolve,reject);\n        })\n    }\n    getLoginStatus = () => {\n        return new Promise<WebsocketResponse>((resolve, reject) => {\n        const _uuid =uuid();\n        const msg = this.createMsg(\n            IMCommand.GETLOGINSTATUS,\n            this.userInfo,\n            this.userInfo.id,\n            0\n        );\n        this.wsSend(msg, resolve, reject);\n        });\n    };\n    private iLogin(data:userInfo){\n        return new Promise<WebsocketResponse>((resolve,reject)=>{\n            this.ws?.close();\n            this.ws = undefined;\n            this.wsSend(\n                this.createMsg(IMCommand.LOGIN,data,data.id,0),\n                resolve,reject)\n        })\n    }\n\n    private reconnect(){\n        if(!this.onceFlag) this.onceFlag = true;\n        if(this.lock) return;\n        this.lock = true;\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.connect();\n            this.lock = false;\n        },500)\n    }\n    private wsSend = (\n        msg:Msg,\n        resolve:(value:WebsocketResponse | PromiseLike<WebsocketResponse>)=>void,\n        reject:(err?:any)=>void\n        )=>{\n            if(this.ws?.readyState !== this.ws?.OPEN){\n                reject({errCode:112,errMsg:'ws conecting'})\n                return;\n            }\n            if(typeof msg.data === \"object\"){\n                msg.data = JSON.stringify(msg.data)\n            }\n            const handleMessage = (ev:MessageEvent<string>)=>{\n                this.lastTime = new Date().getTime();\n                const data = JSON.parse(ev.data)\n                if( (IMEvents as Record<string,string>)[data.event.toUpperCase()] ){\n                    this.emit(data.event,data);\n                    return;\n                }\n\n                if(msg.cmd === IMCommand.LOGOUT){\n                    //退出指令\n                    this.ws!.close();\n                    this.ws = undefined;\n                    this.onceFlag = true;\n                }\n                // const callbackJob = this.ws2promise()\n            }\n            try{\n                if(this.platform=='web'){\n                    this.ws!.send(JSON.stringify(msg))\n                    this.ws!.onmessage = handleMessage;\n                }else{\n                    this.ws!.send({\n                        //@ts-ignore\n                        data:JSON.stringify(msg),\n                        success:(res:any) =>{\n                            if(\n                                this.platform==='uni' &&\n                                //@ts-ignore\n                                this.ws!._callbacks !== undefined &&\n                                //@ts-ignore\n                                this.ws!._callbacks.message !== undefined\n                            ){\n                                //@ts-ignore\n                                this.ws!._callbacks.message = [];\n                            }\n                        }\n                    });\n\n                    if(this.onceFlag){\n                        //@ts-ignore\n                        this.ws!.onMessage(handleMessage);\n                        this.onceFlag=false;\n                    }\n\n                }\n            } catch(error){\n                reject({errCode:112,errMsg:\"no ws connect...\"})\n                return;\n            }\n            if (msg.cmd === IMCommand.LOGOUT) {\n                this.onceFlag = true;\n            }\n        }\n}","import { IMEvents } from './constants';\nimport {WebsocketResponse} from './types'\ninterface Events {\n    [key:string]:CallbackFunction[]\n}\ntype CallbackFunction = (data:WebsocketResponse)=>void\nclass Emitter {\n\n    private events:Events;\n    constructor(){\n        this.events = {};\n    }\n    emit(event:IMEvents,data:WebsocketResponse){\n        if(this.events[event]){\n            this.events[event].forEach((fn)=>fn(data));\n        }\n    }\n    on(event:IMEvents,fn:CallbackFunction){\n        if(this.events[event]){\n            this.events[event].push(fn)\n        }else{\n            this.events[event] = [fn];\n        }\n        return this;\n    }\n    off(event:IMEvents,fn:CallbackFunction){\n        if(event && typeof fn === 'function'){\n            const listeners = this.events[event];\n            const index = listeners.findIndex((_fn)=>_fn===fn);\n            listeners.splice(index,1);\n        }else{\n            this.events[event] = [];\n        }\n    }\n}\nexport{\n    Emitter\n}"],"names":["IMCommand","IMEvents","stopWorker","instance","terminate","err","console","log","uuid","Math","random","toString","slice","Date","getTime","WEIMSDK","constructor","events","this","emit","event","data","forEach","fn","on","push","off","listeners","index","findIndex","_fn","splice","cfg","super","ws","wsUrl","lastTime","heartbeatCount","heartbeatStartTime","logoutFlag","lock","domain","mid","platform","onceFlag","timer","undefined","worker","userInfo","getLoginStatus","Promise","resolve","reject","msg","createMsg","GETLOGINSTATUS","id","wsSend","_this$ws","_this$ws2","readyState","OPEN","errCode","errMsg","JSON","stringify","handleMessage","ev","parse","toUpperCase","cmd","LOGOUT","close","send","onmessage","success","res","_callbacks","message","onMessage","error","connect","onOpen","iLogin","then","heartbeat","catch","onClose","onError","WebSocket","onclose","onopen","onerror","platformNamespace","uni","wx","connectSocket","url","complete","_this$ws3","_this$ws4","_this$ws5","_this$ws6","clearTimer","callback","CONNECTING","reconnect","time","pollingWorker","fun","blob","Blob","window","URL","createObjectURL","Worker","create","createWorker","clearTimeout","fromId","toId","logout","uid","_this$ws7","LOGIN","setTimeout"],"mappings":"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"}